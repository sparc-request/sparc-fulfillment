-# Copyright Â© 2011-2017 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

- if @task_id
  = hidden_field_tag 'task_id', @task_id
  = javascript_include_tag 'show_task'

%h1 Task List
.bootstrap-table-dropdown-overflow
  #custom_tool_buttons
    %button.btn.btn-primary.new-task{type: "button", aria: {label: "Create Task"}}=t(:task)[:new_task]
    = check_box_tag("complete", '', false, data: { toggle: "toggle", on: t(:task)[:show_complete], off: t(:task)[:show_incomplete], onstyle: "success" } )
    = check_box_tag("all_tasks", '', false, { data: { toggle: "toggle", on: t(:task)[:all_tasks], off: t(:task)[:my_tasks], onstyle: "success" } } )
%table.tasks.custom_striped{style: "padding: 0px 0px;",id: "task-list", data: {"idField" => "id", toggle: 'table', search: "true", "show-columns" => "true", "show-refresh" => "true", "show-toggle" => "true", url: tasks_path(scope: 'mine', format: :json), "sort-name" => "due_at", "sort-order" => 'asc', striped: "true", toolbar: "#custom_tool_buttons", "show-export" => "true", "export-types" => ['excel']}}
  %thead
    %tr
      %th{data: {class: 'protocol_id', align: 'center', field: 'protocol_id', width: "5", visible: "false", sortable: "true"}}
        = t(:protocol)[:id]
      %th{data: {class: 'user_name', align: 'left', sortable: "true", field: 'user_name'}}
        = t(:task)[:identity_name]
      %th{data: {class: 'assignee_name', align: 'left', sortable: "true", field: 'assignee_name'}}
        = t(:task)[:assignee_name]
      %th{data: {class: 'assignable_type', align: 'left', sortable: "true", field: 'assignable_type'}}
        = t(:task)[:assignable_type]
      %th{data: {class: 'body', align: 'left', sortable: "true", field: 'body'}}
        = t(:task)[:object]
      %th{data: {class: 'due_at', align: 'left', sortable: "true", sorter: "dueDateSorter", field: 'due_at'}}
        = t(:task)[:due_at]
      %th{data: {class: 'complete', align: 'center', field: 'complete'}}
        = t(:task)[:completed]
      %th{data: {class: 'reschedule', align: 'center', field: 'reschedule', width: "5"}}
        = t(:task)[:reschedule]
      %th{data: {class: 'org', align: 'left', field: 'organization', visible: "false", sortable: "true"}}
        = t(:procedure)[:prog_core]
