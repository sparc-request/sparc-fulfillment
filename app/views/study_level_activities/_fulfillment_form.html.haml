-# Copyright Â© 2011-2023 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

.modal-dialog
  .modal-content
    = form_for fulfillment, {remote: true, html: {class: "form-horizontal fulfillment-form", role: "form"}} do |form|
      .modal-header
        %h4.modal-title.text-center= header_text
        %button.close{"aria-label" => t(:actions)[:close], "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
      .modal-body
        #modal_errors
        = render partial: 'required_fields'
        .row.mt-3
          .col-md-12
            = form.hidden_field :line_item_id
            .form-group.row.align-items-center
              = form.label "fulfilled_at", t(:fulfillment)[:fulfillment_date]+t(:actions)[:required], class: 'control-label mb-0 col-sm-4'
              .input-group.datetimepicker.date.col-sm-8{ id: 'fulfillment_date', data: {target_input: 'nearest' }}
                = form.text_field "fulfilled_at", {class: "form-control datetimepicker-input", readonly: true, data: { target:"#fulfillment_date", toggle: 'datetimepicker' }, value: format_date(fulfillment.fulfilled_at)}
                .input-group-append{ data: { toggle: 'datetimepicker', target: '#fulfillment_date' }}
                  .input-group-text
                    %span.far.fa-calendar

            .form-group.row.align-items-center
              = form.label "quantity", t(:fulfillment)[:quantity]+t(:actions)[:required], class: "col-sm-4 control-label mb-0"
              .col-sm-8
                = form.text_field "quantity", {class: 'form-control'}
            .form-group.row.align-items-center
              = form.label "performer_id", t(:fulfillment)[:performed_by], class: "col-sm-4 control-label mb-0"
              .col-sm-8
                = form.select "performer_id", options_from_collection_for_select(clinical_providers.map(&:identity), 'id', 'full_name', fulfillment.performer_id || current_identity.id), {include_blank: false}, class: 'form-control selectpicker'
            .form-group.row.align-items-center
              = form.label "components", t(:fulfillment)[:components], class: "col-sm-4 control-label mb-0"
              .col-sm-8
                = form.select "components", options_for_select(fulfillment.line_item.service.components_list, fulfillment.components.map(&:component)), {include_blank: false}, {class: 'form-control selectpicker', multiple: "", title: "Please Select", 'data-width' => '150px', 'data-selected-text-format' => 'count>2'}
      .modal-footer
        .center-block
          %button#fulfillments_back.btn.btn-secondary{type: 'button', data: {line_item_id: fulfillment.line_item_id}}
            = t(:actions)[:close]
          %input.btn.btn-primary.add_fulfillment{type: 'submit', value: t(:actions)[:save]}
