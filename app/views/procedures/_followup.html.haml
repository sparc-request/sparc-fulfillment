-# Copyright Â© 2011-2023 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

- disabled = procedure.invoiced? || procedure.credited? || !procedure.appointment.started?
- if procedure.invoiced?
  - tooltip = t('procedures.tooltips.invoiced.disabled')
- elsif procedure.credited?
  - tooltip = t('procedures.tooltips.credited.disabled')
- elsif !procedure.appointment.started?
  - tooltip = t('procedures.tooltips.unstarted_appointment')
- elsif procedure.task.nil?
  - tooltip = t('procedures.tooltips.followup.schedule')

%div{ id: "followup#{procedure.id}" }
  .tooltip-wrapper{ title: tooltip, data: { toggle: 'tooltip' } }
    - if procedure.task.present?
      = form_for procedure.task, url: task_path(procedure.task), remote: true, method: :put do |f|
        .input-group.datetimepicker.date.followup-datepicker{ id: "followupDatePicker#{procedure.id}", onchange: "updateFollowupDate($(this), '#{procedure.task.due_at.to_formatted_s(:iso8601)}')", data: { target_input: 'nearest' } }
          = f.text_field :due_at, class: 'datetimepicker-input form-control', id: "followupDatePickerInput#{procedure.id}", value: format_date(procedure.task.due_at), disabled: disabled, data: { target: "#followupDatePicker#{procedure.id}" }
    - else
      = link_to edit_appointment_procedure_path(procedure, appointment_id: procedure.appointment_id), remote: true, class: ['btn btn-warning', disabled ? 'disabled' : ''] do
        = icon('fas', 'calendar-alt')
