-# Copyright Â© 2011-2020 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

- if !procedure.appointment.started?
  - disabled = true
  - tooltip = t('procedures.tooltips.unstarted_appointment')
- elsif procedure.invoiced?
  - disabled = true
  - tooltip = t('procedures.tooltips.invoiced.disabled')
- elsif procedure.credited?
  - disabled = true
  - tooltip = t('procedures.tooltips.credited.disabled')
- else
  - disabled = false
  - tooltip = ''

.btn-group.appointment-status-buttons{ id: "procedure#{procedure.id}StatusButtons", title: tooltip, role: 'group', data: { selected: procedure.follow_up? ? 'unstarted' : procedure.status, toggle: disabled ? 'tooltip' : '' } }
  %button.btn.btn-outline-success.btn-sq.complete-btn{ class: [procedure.complete? ? 'active' : '', disabled ? 'disabled' : ''], title: t('procedures.tooltips.complete'), data: { toggle: disabled ? '' : 'tooltip', url: appointment_procedure_path(procedure, appointment_id: procedure.appointment_id, procedure: { status: 'complete', performer_id: current_identity.id }), status: 'complete' } }
    = icon('fas', 'check')
  %button.btn.btn-outline-secondary.btn-sq.unstarted-btn{ class: [procedure.unstarted? || procedure.follow_up? ? 'active' : '', disabled || procedure.appointment.completed? ? 'disabled' : ''], title: t('procedures.tooltips.unstarted'), data: { toggle: disabled ? '' : 'tooltip', url: appointment_procedure_path(procedure, appointment_id: procedure.appointment_id, procedure: { status: 'unstarted', performer_id: current_identity.id }), status: 'unstarted' } }
    = icon('fas', 'times')
  %button.btn.btn-outline-warning.btn-sq.incomplete-btn{ class: [procedure.incomplete? ? 'active' : '', disabled ? 'disabled' : ''], title: t('procedures.tooltips.incomplete'), data: { toggle: disabled ? '' : 'tooltip', url: edit_appointment_procedure_path(procedure, appointment_id: procedure.appointment_id, procedure: { status: 'incomplete', performer_id: nil }), status: 'incomplete' } }
    = icon('fas', 'exclamation')
