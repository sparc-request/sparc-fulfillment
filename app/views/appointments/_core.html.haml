-# Copyright Â© 2011-2020 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

.card-header.flex-wrap.border-top.border-bottom-0
  %h3.w-100
    = core.name
  .btn-group.service-multiselect-container.w-50
    - disabled = !appointment.started? || appointment.completed? ? 'disabled' : nil
    .w-60
      = select_tag "core_#{core.id}_multiselect", options_for_select(procedures_groups_for_select(procedures)), disabled: disabled, class: 'core_multiselect selectpicker show-tick w-100', multiple: true, data: { actions_box: true, appointment_id: appointment.id, core_id: core.id }
    %button.btn.btn-default.btn-primary.multiselect.complete_all{ type: 'button', id: "core_#{core.id}_multiselect_complete_all", disabled: disabled, class: "w-20 #{disabled}", data: { status: 'complete' } }
      Complete
    %button.btn.btn-default.btn-warning.multiselect.incomplete_all{ type: 'button', id: "core_#{core.id}_multiselect_incomplete_all", disabled: disabled, class: "w-20 #{disabled}", data: { status: 'incomplete' } }
      Incomplete
- if appointment_style == 'grouped'
  %table.table-hover.core{ id: "core#{core.id}ProceduresGroupedView", data: { toggle: 'table', group_by: 'true', group_by_field: 'group_label', group_by_toggle: 'true', group_by_formatter: 'proceduresGroupFormatter', group_by_collapsed_groups: 'proceduresCollapsedGroups', url: appointment_procedures_path(appointment_id: appointment.id, core_id: core.id, format: :json) } }
    %thead.bg-light
      %th.w-20.name{ data: { field: 'name' } }
        = Procedure.model_name.human
      %th.w-5.billing-type{ data: { field: 'billing_type' } }
        = Procedure.human_attribute_name(:billing_type)
      %th.w-10.status{ data: { field: 'status', align: 'center', halign: 'left' } }
        = Procedure.human_attribute_name(:status)
      %th.w-15.followup{ data: { field: 'followup', align: 'center', halign: 'left' } }
        = Procedure.human_attribute_name(:followup)
      %th.w-15.completed-date{ data: { field: 'completed_date' } }
        = Procedure.human_attribute_name(:completed_date)
      %th.w-15.performer{ data: { field: 'performer' } }
        = Procedure.human_attribute_name(:performer)
      %th.w-5.invoiced{ data: { field: 'invoiced' } }
        = Procedure.human_attribute_name(:invoiced)
      %th.w-5.credited{ data: { field: 'credited' } }
        = Procedure.human_attribute_name(:credited)
      %th.w-5.notes{ data: { field: 'notes', align: 'center', halign: 'left' } }
        = Note.model_name.plural.capitalize
      %th.w-5.actions{ data: { field: 'actions', align: 'center', halign: 'left' } }
        = t('actions.actions')
      %th.group-label{ class: 'd-none', data: { field: 'group_label' } }
        -# group label column for table grouping, intentionally left d-none

- else
  %table.table-hover{ id: "core#{core.id}ProceduresCustomView", data: { toggle: 'table', url: appointment_procedures_path(appointment_id: appointment.id, core_id: core.id, format: :json) } }
    %thead.bg-light
      %th.w-20.name{ data: { field: 'name' } }
        = Procedure.model_name.human
      %th.w-5.billing-type{ data: { field: 'billing_type' } }
        = Procedure.human_attribute_name(:billing_type)
      %th.w-10.status{ data: { field: 'status', align: 'center', halign: 'left' } }
        = Procedure.human_attribute_name(:status)
      %th.w-10.followup{ data: { field: 'followup', align: 'center', halign: 'left' } }
        = Procedure.human_attribute_name(:followup)
      %th.w-15.completed-date{ data: { field: 'completed_date' } }
        = Procedure.human_attribute_name(:completed_date)
      %th.w-15.performer{ data: { field: 'performer' } }
        = Procedure.human_attribute_name(:performer)
      %th.w-5.invoiced{ data: { field: 'invoiced' } }
        = Procedure.human_attribute_name(:invoiced)
      %th.w-5.credited{ data: { field: 'credited' } }
        = Procedure.human_attribute_name(:credited)
      %th.w-5.notes{ data: { field: 'notes', align: 'center', halign: 'left' } }
        = Note.model_name.plural.capitalize
      %th.w-10.actions{ data: { field: 'actions', align: 'center', halign: 'left' } }
        = t('actions.actions')
