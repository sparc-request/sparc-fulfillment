-# Copyright Â© 2011-2020 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

.card-header.flex-wrap.border-top.border-bottom-0
  %h3.w-100
    = core.name
  .d-flex.service-multiselect-container
    = select_tag 'core_multiselect', nil, class: "selectpicker #{disabled_class(!appointment.started?)}", multiple: true
    %button.btn.btn-default.btn-primary.multiselect.complete_all.disabled{ type: 'button', id: "core_#{core.id}_multiselect_complete_all", class: disabled_class(!appointment.started?) } Complete
    %button.btn.btn-default.btn-warning.multiselect.incomplete_all.disabled{ type: 'button', id: "core_#{core.id}_multiselect_incomplete_all", class: disabled_class(!appointment.started?) } Incomplete
%table.table-hover{ id: "core-#{core.id}-procedures", data: { toggle: 'table', url: appointment_procedures_path(appointment_id: appointment.id, core_id: core.id, format: :json) } }
  %thead.bg-light
    %th.w-20.name{ data: { field: 'name' } }
      = Procedure.model_name.human
    %th.billing-type{ data: { field: 'billing_type' } }
      = Procedure.human_attribute_name(:billing_type)
    %th.status{ data: { field: 'status', align: 'center', halign: 'left' } }
      = Procedure.human_attribute_name(:status)
    %th.followup{ data: { field: 'followup', align: 'center', halign: 'left' } }
      = Procedure.human_attribute_name(:followup)
    %th.completed-date{ data: { field: 'completed_date' } }
      = Procedure.human_attribute_name(:completed_date)
    %th.performer{ data: { field: 'performer' } }
      = Procedure.human_attribute_name(:performer)
    %th.invoiced{ data: { field: 'invoiced' } }
      = Procedure.human_attribute_name(:invoiced)
    %th.credited{ data: { field: 'credited' } }
      = Procedure.human_attribute_name(:credited)
    %th.notes{ data: { field: 'notes', align: 'center', halign: 'left' } }
      = Note.model_name.plural.capitalize
    %th.actions{ data: { field: 'actions', align: 'center', halign: 'left' } }
      = t('actions.actions')
