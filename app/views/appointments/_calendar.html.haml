-# Copyright Â© 2011-2020 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

.card.w-100
  .card-header.d-flex.justify-content-between
    %h3.mb-0
      = "#{Appointment.model_name.human}: #{appointment.formatted_name}"
    .d-flex
      .appointment-action-buttons.d-flex
        = render '/appointments/appointment_action_buttons', appointment: appointment
      = notes_button(appointment, model: Appointment.model_name.human)
      - if @appointment_style == "grouped"
        = link_to appointment_change_appointment_style_path(appointment_id: appointment.id, appointment_style: 'custom'), remote: true, class: 'btn btn-secondary ml-1', title: t('appointments.tooltips.change_view_style.custom'), data: { toggle: 'tooltip', placement: 'top', animation: 'false' } do
          = icon('fas', 'list')
      - else
        = link_to appointment_change_appointment_style_path(appointment_id: appointment.id, appointment_style: 'grouped'), remote: true, class: 'btn btn-secondary ml-1', title: t('appointments.tooltips.change_view_style.grouped'), data: { toggle: 'tooltip', placement: 'top', animation: 'false' } do
          = icon('far', 'list-alt')
  .card-body
    .row
      = render '/appointments/start_complete_datepickers', appointment: appointment
      = render '/appointments/visit_type_dropdown', appointment: appointment
      = render '/appointments/visit_indications_dropdown', appointment: appointment
  - appointment_procedures = appointment.procedures_grouped_by_core
  - appointment.cores.each do |core|
    = render '/appointments/core', core: core, appointment: appointment, procedures: appointment_procedures[core.id], appointment_style: appointment_style

.card.w-100.services
  = form_with url: "/appointments/#{appointment.id}/procedures", local: false do |f|
    .card-header
      %h3.mb-0
        Add Services
    .card-body
      .row
        .form-group.mb-0.col-8
          = f.select :service_id, options_from_collection_for_select(appointment.protocol.organization.inclusive_child_services(:per_participant), 'id', 'name'), { include_blank: true }, class: 'form-control selectpicker'
        .col-2
          = f.text_field :qty, value: 1, class: 'form-control'
        .col-2
          %button.btn.btn-success.w-100#addService
            = t('appointments.add_service')
